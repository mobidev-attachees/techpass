/* page.module.css */

.navbar {
  background-color: #faf4f4; /* Example background color */
  color: #0c0c0c;
}

.container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
}

.brand {
  color: #0c0c0c; /* Example text color */
  font-size: 1.5rem;
  text-decoration: none;
}

.toggleBtn {
  background-color: transparent;
  border: none;
  cursor: pointer;
  padding: 0.25rem 0.5rem;
}

.toggleBtn-lg {
  display: none; /* Example: hide on larger screens */
}

.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.iconBar {
  background-color: #fff; /* Example icon color */
  display: block;
  width: 1.5rem;
  height: 0.2rem;
  margin: 0.25rem auto;
}

.collapse {
  display: flex;
  flex-grow: 1;
  justify-content: flex-end;
}

.nav {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
}

.navItem {
  margin-left: 1rem; /* Example spacing between nav items */
}

.navLink {
  color: #0c0c0c; /* Example text color */
  text-decoration: none;
}

/* Additional styles for the image within the navbar */
.navImage {
  max-width: 50px; /* Ensure the image doesn't exceed the width of its container */
  max-height: 50px; /* Ensure the image doesn't exceed the height of its container */
  margin-right: 0.5rem; /* Example margin between image and text */
  border-radius: 100%;
}

.image-container {
    height: 50vh; /* Fixed responsive height */
}

.glassmorphism-container {
    backdrop-filter: blur(6px) saturate(102%);
    -webkit-backdrop-filter: blur(6px) saturate(102%);
    background-color: rgba(255, 255, 255, 0.45);
    border-radius: 12px;
    border: 1px solid rgba(209, 213, 219, 0.3);
    max-width: 100%;
    margin: 20px; /* Adjust margin as needed */
}



.description p {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); /* Increased min width for larger cards */
  gap: 5px;
  max-width: 100%;
  width: 100%;
 margin-top: 20px;
 margin-bottom: 20px;
 background-color: #fff;
 padding: 20px;
  
}



.card {
  border-radius: var(--border-radius);
  background:white;
  transition: background 200ms, border 200ms;
  background: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 1);
  text-align: center;
  transition: box-shadow 0.3s ease-in-out;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;

}

.cardImage {
  position: relative;
  width: 100%;
  overflow: hidden; /* Hide any overflow beyond the container */
}

.cardImage{
  width: 100%; /* Ensure the image fills the container */
  height: 70%; /* Ensure the image fills the container */
  object-fit: cover; /* Maintain aspect ratio and cover entire container */
}
.cardContent {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.cardColumnSmall {
  flex: 0.4;
  padding: 10px;
}

.cardColumnLarge {
  flex: 3.6;
  padding: 10px;
  text-align: left;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
  text-wrap: balance;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card {
    transition: transform 0.1s ease, box-shadow 0.5s ease;
  }

  .card:hover {
    transform: scale(1.03);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 1);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.imageContainer {
  position: relative;
  width: 100%;
  max-width: 800px; /* Set a maximum width */
  height: auto; /* Let the height adjust based on the aspect ratio */
  margin: 0 auto; /* Center the container horizontally */
}

.textOverlay {
  position: absolute;
  bottom: 20px; /* Adjust the distance from the bottom */
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  max-width: 500px;
  padding: 20px;
  border-radius: 20px; /* Adjust the border radius as needed */
  overflow: hidden; /* Ensure that the blur effect stays within the container */
}

.textOverlay::before {
  content: "";
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  background: inherit;
  border-radius: inherit;
  filter: blur(90%); /* Adjust the blur radius as needed */
}

.textOverlay h2 {
  margin: 0;
  font-size: 2em;
}

.textOverlay p {
  margin: 0;
  font-size: 1em;
}
